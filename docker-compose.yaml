version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka-broker-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    volumes:
    - kafka-data:/var/lib/kafka/data
    ports:
      - "9092:9092"
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:19092,PLAINTEXT_INTERNAL://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: 'postgres:13.1-alpine'
    ports:
      - "5432:5432"
    container_name: postgres
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=123
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data

  passenger-service:
    build: ./passenger-service
    container_name: passenger-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/passengers
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=123
      - eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/
    depends_on:
      - postgres
      - api-gateway

  driver-service:
    build: ./driver-service
    container_name: driver-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/drivers
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=123
      - eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/
    depends_on:
      - postgres
      - kafka-broker-1
      - api-gateway

  ride-service:
    build: ./ride-service
    container_name: ride-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/rides?stringtype=unspecified
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=123
      - eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/
    depends_on:
      - postgres
      - kafka-broker-1
      - api-gateway

  service-registry:
    build: ./service-registry
    container_name: service-registry
    ports:
      - "8761:8761"

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8083:8083"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://service-registry:8761/eureka/
    depends_on:
      - service-registry

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
      image: grafana/grafana:9.5.2
      container_name: grafana
      ports:
        - "3000:3000"
      restart: unless-stopped
      volumes:
        - ./monitoring/grafana/provisioning/datasource:/etc/grafana/provisioning/datasource
      depends_on:
        - prometheus

  logstash:
    image: logstash:7.7.0
    container_name: logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./monitoring/logstash:/etc/logstash/conf.d
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:7.7.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9300"
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  elasticsearch:
    image: elasticsearch:7.7.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9300:9300
      - 9200:9200

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    depends_on:
      - elasticsearch
    environment:
      - STORAGE_TYPE=elasticsearch
      - "ES_HOSTS=elasticsearch:9200"
    ports:
      - "9411:9411"

volumes:
  postgres-data:
    driver: local
  kafka-data:
    driver: local
  zookeeper-data:
    driver: local
  esdata:
    driver: local
